name: ML CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run Unit Tests
      run: pytest tests/

    - name: Small-Scale Training
      run: python train.py

    - name: Evaluate Model
      run: python evaluate.py

    - name: Check Performance Threshold
      run: python check_performance.py

    - name: Upload Model Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: model-artifacts
        path: artifacts/

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download Model Artifacts
      uses: actions/download-artifact@v4
      with:
        name: model-artifacts
        path: artifacts/

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        echo "Building Docker image with model..."
        docker build -t ${{ secrets.DOCKER_USERNAME }}/ml-app:${{ github.sha }} .
        docker build -t ${{ secrets.DOCKER_USERNAME }}/ml-app:latest .

    - name: Push to Docker Hub
      run: |
        echo "Pushing Docker image to Docker Hub..."
        docker push ${{ secrets.DOCKER_USERNAME }}/ml-app:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/ml-app:latest
        echo "âœ… Model successfully deployed to Docker Hub!"

    - name: Deploy to Staging
      run: |
        echo "Model deployed and available at:"
        echo "docker pull ${{ secrets.DOCKER_USERNAME }}/ml-app:latest"
        echo "docker pull ${{ secrets.DOCKER_USERNAME }}/ml-app:${{ github.sha }}"
   